{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iam-v0id\\\\OneDrive\\\\Documents\\\\CODE\\\\BZ\\\\Cyber\\\\src\\\\components\\\\room\\\\AddQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddQuestion(roomId) {\n  _s();\n\n  const [values, setValues] = useState({\n    roomId: roomId.roomId,\n    name: ' ',\n    description: ' ',\n    answer: ' '\n  });\n\n  const onchange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    addQuestion();\n  };\n\n  const [addQuestion, {\n    error\n  }] = useMutation(CREATE_ADD_MUTATION, {\n    variables: values\n    /* update(_,result){\r\n         console.log(result)\r\n     } */\n\n  });\n  const crbtstyle = {\n    margin: \"0vh 0vh 0vh 5vh\"\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"crh2\",\n      children: \"Add question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [\"Question Name\", /*#__PURE__*/_jsxDEV(Form.Input, {\n        placeholder: \"Question name\",\n        name: \"name\",\n        onChange: onchange,\n        value: values.name,\n        className: \"crinput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this), \"Description\", /*#__PURE__*/_jsxDEV(Form.Input, {\n        placeholder: \"Description\",\n        name: \"description\",\n        onChange: onchange,\n        value: values.description,\n        className: \"crinput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this), \"Flag\", /*#__PURE__*/_jsxDEV(Form.Input, {\n        placeholder: \"Answer\",\n        name: \"answer\",\n        onChange: onchange,\n        value: values.answer,\n        className: \"crinput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: crbtstyle,\n        type: \"submit\",\n        color: \"teal\",\n        children: \"Add new Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n}\n\n_s(AddQuestion, \"E/PSGGH1BMaUqyXgnMgI3y372o4=\", false, function () {\n  return [useMutation];\n});\n\n_c = AddQuestion;\nconst CREATE_ADD_MUTATION = gql`\n    mutation addQuestion($roomId: ID!,$name: String!,$description: String!,$answer: String!){\n        addQuestion(questionInput:{roomId: $roomId, name: $name, description: $description, answer: $answer}){\n            id\n        }\n    }\n`;\nexport default AddQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuestion\");","map":{"version":3,"sources":["C:/Users/iam-v0id/OneDrive/Documents/CODE/BZ/Cyber/src/components/room/AddQuestion.js"],"names":["React","useContext","useState","Button","Form","useMutation","gql","AddQuestion","roomId","values","setValues","name","description","answer","onchange","event","target","value","onSubmit","addQuestion","error","CREATE_ADD_MUTATION","variables","crbtstyle","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA2B,cAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;;;AACA,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC;AAChCM,IAAAA,MAAM,EAAEA,MAAM,CAACA,MADiB;AAEhCG,IAAAA,IAAI,EAAE,GAF0B;AAGhCC,IAAAA,WAAW,EAAE,GAHmB;AAIhCC,IAAAA,MAAM,EAAE;AAJwB,GAAD,CAAnC;;AAMA,QAAMC,QAAQ,GAAIC,KAAD,IAAS;AACvBL,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAW,OAACM,KAAK,CAACC,MAAN,CAAaL,IAAd,GAAoBI,KAAK,CAACC,MAAN,CAAaC;AAA5C,KAAD,CAAT;AACF,GAFD;;AAGA,QAAMC,QAAQ,GAAIH,KAAD,IAAS;AACtBI,IAAAA,WAAW;AACd,GAFD;;AAGD,QAAM,CAACA,WAAD,EAAa;AAACC,IAAAA;AAAD,GAAb,IAAwBf,WAAW,CAACgB,mBAAD,EAAqB;AAC1DC,IAAAA,SAAS,EAAEb;AACZ;AACN;AACA;;AAJiE,GAArB,CAAzC;AAMA,QAAMc,SAAS,GAAC;AAACC,IAAAA,MAAM,EAAC;AAAR,GAAhB;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAA,+CAEI,QAAC,IAAD,CAAM,KAAN;AACA,QAAA,WAAW,EAAC,eADZ;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,QAAQ,EAAEJ,QAHV;AAIA,QAAA,KAAK,EAAEL,MAAM,CAACE,IAJd;AAKA,QAAA,SAAS,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,cAFJ,8BAUI,QAAC,IAAD,CAAM,KAAN;AACA,QAAA,WAAW,EAAC,aADZ;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,QAAQ,EAAEG,QAHV;AAIA,QAAA,KAAK,EAAEL,MAAM,CAACG,WAJd;AAKA,QAAA,SAAS,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,cAVJ,uBAkBI,QAAC,IAAD,CAAM,KAAN;AACA,QAAA,WAAW,EAAC,QADZ;AAEA,QAAA,IAAI,EAAC,QAFL;AAGA,QAAA,QAAQ,EAAEE,QAHV;AAIA,QAAA,KAAK,EAAEL,MAAM,CAACI,MAJd;AAKA,QAAA,SAAS,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAyBI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEU,SAAf;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,KAAK,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCF;;GApDQhB,W;UAawBF,W;;;KAbxBE,W;AAqDT,MAAMc,mBAAmB,GAAGf,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,eAAeC,WAAf","sourcesContent":["import React,{useContext,useState} from 'react'\r\nimport {Button, Form} from 'semantic-ui-react'\r\nimport { useMutation} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nfunction AddQuestion(roomId){\r\n    const [values,setValues] = useState({\r\n        roomId: roomId.roomId,\r\n        name: ' ',\r\n        description: ' ',\r\n        answer: ' '\r\n    })\r\n    const onchange = (event)=>{\r\n       setValues({...values,[event.target.name]:event.target.value})\r\n    }\r\n    const onSubmit = (event)=>{\r\n        addQuestion()\r\n    }\r\n   const [addQuestion,{error}] = useMutation(CREATE_ADD_MUTATION,{\r\n       variables: values,\r\n      /* update(_,result){\r\n           console.log(result)\r\n       } */\r\n   })\r\n   const crbtstyle={margin:\"0vh 0vh 0vh 5vh\"}\r\n   return(\r\n       <Form onSubmit={onSubmit}>\r\n           <h2 className=\"crh2\">Add question</h2>\r\n           <Form.Field>\r\n               Question Name\r\n               <Form.Input\r\n               placeholder='Question name'\r\n               name='name'\r\n               onChange={onchange}\r\n               value={values.name}\r\n               className=\"crinput\"\r\n               />\r\n               Description\r\n               <Form.Input\r\n               placeholder='Description'\r\n               name='description'\r\n               onChange={onchange}\r\n               value={values.description}\r\n               className=\"crinput\"\r\n               />\r\n               Flag\r\n               <Form.Input\r\n               placeholder='Answer'\r\n               name='answer'\r\n               onChange={onchange}\r\n               value={values.answer}\r\n               className=\"crinput\"\r\n               />\r\n               <Button style={crbtstyle} type=\"submit\" color=\"teal\">Add new Question</Button>\r\n           </Form.Field>\r\n       </Form>\r\n   )\r\n}\r\nconst CREATE_ADD_MUTATION = gql`\r\n    mutation addQuestion($roomId: ID!,$name: String!,$description: String!,$answer: String!){\r\n        addQuestion(questionInput:{roomId: $roomId, name: $name, description: $description, answer: $answer}){\r\n            id\r\n        }\r\n    }\r\n`\r\nexport default AddQuestion"]},"metadata":{},"sourceType":"module"}