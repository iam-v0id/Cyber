{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iam-v0id\\\\OneDrive\\\\Documents\\\\CODE\\\\BZ\\\\Cyber\\\\src\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { useMutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm(props) {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState({\n    body: ''\n  });\n\n  const onchange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    createPost();\n  };\n\n  const [createPost, {\n    error\n  }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n\n    update(proxy, result) {\n      const data = proxy.readQuery({\n        query: FETCH_POSTS_QUERY\n      });\n      data.getPosts = [result.data.createPost, ...data.getPosts];\n      proxy.writeQuery({\n        query: FETCH_POSTS_QUERY,\n        data\n      });\n      values.body = '';\n      props.history.push('/Posts');\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Post:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        placeholder: \"Create Post\",\n        name: \"body\",\n        onChange: onchange,\n        value: values.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"teal\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"5I4Z1lk9HIq/mlkv7+pLEJetkHQ=\", false, function () {\n  return [useMutation];\n});\n\n_c = PostForm;\nconst CREATE_POST_MUTATION = gql`\n    mutation createPost($body: String!){\n        createPost(body:$body){\n            id\n            body\n            createdAt\n            username\n            likes{\n                id\n                username\n                createdAt\n            }\n            comments{\n                id \n                body\n                createdAt\n            }\n        }\n    }\n`;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/Users/iam-v0id/OneDrive/Documents/CODE/BZ/Cyber/src/components/PostForm.js"],"names":["React","useContext","useState","Button","Form","useMutation","gql","FETCH_POSTS_QUERY","PostForm","props","errors","setErrors","values","setValues","body","onchange","event","target","name","value","onSubmit","preventDefault","createPost","error","CREATE_POST_MUTATION","variables","update","proxy","result","data","readQuery","query","getPosts","writeQuery","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA2B,cAA3B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,iBAAR,QAAgC,iBAAhC;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AAClB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACD,QAAM,CAACU,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC;AAChCY,IAAAA,IAAI,EAAE;AAD0B,GAAD,CAAnC;;AAGA,QAAMC,QAAQ,GAAIC,KAAD,IAAS;AACvBH,IAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAW,OAACI,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAoBF,KAAK,CAACC,MAAN,CAAaE;AAA5C,KAAD,CAAT;AACF,GAFD;;AAGA,QAAMC,QAAQ,GAAIJ,KAAD,IAAS;AACtBA,IAAAA,KAAK,CAACK,cAAN;AACAC,IAAAA,UAAU;AACb,GAHD;;AAID,QAAM,CAACA,UAAD,EAAY;AAACC,IAAAA;AAAD,GAAZ,IAAuBlB,WAAW,CAACmB,oBAAD,EAAsB;AAC1DC,IAAAA,SAAS,EAAEb,MAD+C;;AAE1Dc,IAAAA,MAAM,CAACC,KAAD,EAAOC,MAAP,EAAc;AAChB,YAAMC,IAAI,GAACF,KAAK,CAACG,SAAN,CAAgB;AACvBC,QAAAA,KAAK,EAAExB;AADgB,OAAhB,CAAX;AAGAsB,MAAAA,IAAI,CAACG,QAAL,GAAgB,CAACJ,MAAM,CAACC,IAAP,CAAYP,UAAb,EAAwB,GAAGO,IAAI,CAACG,QAAhC,CAAhB;AACAL,MAAAA,KAAK,CAACM,UAAN,CAAiB;AAACF,QAAAA,KAAK,EAACxB,iBAAP;AAAyBsB,QAAAA;AAAzB,OAAjB;AACAjB,MAAAA,MAAM,CAACE,IAAP,GAAc,EAAd;AACAL,MAAAA,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH;;AAVyD,GAAtB,CAAxC;AAYA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEf,QAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AACA,QAAA,WAAW,EAAC,aADZ;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,QAAQ,EAAEL,QAHV;AAIA,QAAA,KAAK,EAAEH,MAAM,CAACE;AAJd;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAtCQN,Q;UAYwBH,W;;;KAZxBG,Q;AAuCT,MAAMgB,oBAAoB,GAAGlB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAoBA,eAAeE,QAAf","sourcesContent":["import React,{useContext,useState} from 'react'\r\nimport {Button, Form} from 'semantic-ui-react'\r\nimport { useMutation} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport {FETCH_POSTS_QUERY} from '../util/graphql'\r\nfunction PostForm(props){\r\n      const [errors,setErrors] = useState({})\r\n     const [values,setValues] = useState({\r\n         body: ''\r\n     })\r\n     const onchange = (event)=>{\r\n        setValues({...values,[event.target.name]:event.target.value})\r\n     }\r\n     const onSubmit = (event)=>{\r\n         event.preventDefault()\r\n         createPost()\r\n     }\r\n    const [createPost,{error}] = useMutation(CREATE_POST_MUTATION,{\r\n        variables: values,\r\n        update(proxy,result){\r\n            const data=proxy.readQuery({\r\n                query: FETCH_POSTS_QUERY\r\n            })\r\n            data.getPosts = [result.data.createPost,...data.getPosts]\r\n            proxy.writeQuery({query:FETCH_POSTS_QUERY,data})\r\n            values.body = ''\r\n            props.history.push('/Posts')\r\n        }\r\n    })\r\n    return(\r\n        <Form onSubmit={onSubmit}>\r\n            <h2>Create Post:</h2>\r\n            <Form.Field>\r\n                <Form.Input\r\n                placeholder='Create Post'\r\n                name='body'\r\n                onChange={onchange}\r\n                value={values.body}\r\n                />\r\n                <Button type=\"submit\" color=\"teal\">Create Post</Button>\r\n            </Form.Field>\r\n        </Form>\r\n    )\r\n}\r\nconst CREATE_POST_MUTATION = gql`\r\n    mutation createPost($body: String!){\r\n        createPost(body:$body){\r\n            id\r\n            body\r\n            createdAt\r\n            username\r\n            likes{\r\n                id\r\n                username\r\n                createdAt\r\n            }\r\n            comments{\r\n                id \r\n                body\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}