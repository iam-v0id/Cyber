{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iam-v0id\\\\OneDrive\\\\Documents\\\\CODE\\\\BZ\\\\Cyber\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Grid, Paper, TextField, Button, Box } from '@material-ui/core';\nimport { gql } from 'graphql-tag';\nimport { useMutation } from 'react-apollo';\nimport { AuthContext } from '../context/auth';\nimport './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(props) {\n  _s();\n\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmpassword: ''\n  });\n\n  const onchange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    addUser();\n  };\n\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(_, result) {\n      context.login(result);\n      props.history.push('/');\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: {\n      username: values.username,\n      email: values.username,\n      password: values.password,\n      confirmpassword: values.confirmpassword\n    }\n  });\n  const regbtStyle = {\n    margin: \"2px 2px 20px 5px\",\n    maxWidth: '80px',\n    maxHeight: '30px',\n    minWidth: '80px',\n    minHeight: '30px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registerpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://i.ibb.co/tm1LGSz/image.png\",\n      className: \"regimgstyle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"regh2-1\",\n      children: \"St4rt H4ck1ng T0d4y\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"regpanestyle\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        className: \"regpaperStyle\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 0,\n          justify: \"center\",\n          alignItems: \"center\",\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"regh2-2\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"reguser\",\n          label: \"Username\",\n          placeholder: \"Username\",\n          name: \"username\",\n          type: \"text\",\n          value: values.username,\n          onChange: onchange,\n          error: errors.username ? true : false,\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"regemail\",\n          label: \"Email\",\n          placeholder: \"Email\",\n          name: \"email\",\n          type: \"text\",\n          value: values.email,\n          onChange: onchange,\n          error: errors.email ? true : false,\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"regpass\",\n          label: \"Password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          value: values.password,\n          onChange: onchange,\n          error: errors.password ? true : false,\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"regconpass\",\n          label: \"Confirm Password\",\n          placeholder: \"Confirm Password\",\n          name: \"confirmpassword\",\n          type: \"password\",\n          value: values.confirmpassword,\n          onChange: onchange,\n          error: errors.confirmpassword ? true : false,\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            color: \"primary\",\n            onClick: onSubmit,\n            style: regbtStyle,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui error message\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: Object.values(errors).map(value => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Register, \"JIZr7zyg+4oQDdMKAtlNOBsritk=\", false, function () {\n  return [useMutation];\n});\n\n_c = Register;\nconst REGISTER_USER = gql`\nmutation register(\n    $username : String!,\n    $email : String!,\n    $password: String!,\n    $confirmpassword: String!\n){\n    register(\n        registerInput:{\n            username: $username,\n            email: $email,\n            password: $password,\n            confirmpassword : $confirmpassword\n        }\n    )\n    {\n            id email username createdAt token\n        }\n}\n`;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/iam-v0id/OneDrive/Documents/CODE/BZ/Cyber/src/pages/Register.js"],"names":["React","useContext","useState","Grid","Paper","TextField","Button","Box","gql","useMutation","AuthContext","Register","props","context","errors","setErrors","values","setValues","username","email","password","confirmpassword","onchange","event","target","name","value","onSubmit","preventDefault","addUser","loading","REGISTER_USER","update","_","result","login","history","push","onError","err","graphQLErrors","extensions","exception","variables","regbtStyle","margin","maxWidth","maxHeight","minWidth","minHeight","Object","keys","length","map"],"mappings":"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","sourcesContent":["import React,{useContext,useState} from 'react'\r\nimport { Grid, Paper, TextField,Button,Box } from '@material-ui/core';\r\nimport {gql} from 'graphql-tag'\r\nimport {useMutation} from 'react-apollo'\r\nimport {AuthContext} from '../context/auth'\r\nimport './Register.css'\r\nfunction Register(props){\r\n    const context  = useContext(AuthContext)\r\n      const [errors,setErrors] = useState({})\r\n     const [values,setValues] = useState({\r\n         username: '',\r\n         email: '',\r\n         password: '',\r\n         confirmpassword: ''\r\n     })\r\n     const onchange = (event)=>{\r\n        setValues({...values,[event.target.name]:event.target.value})\r\n     }\r\n     const onSubmit = (event)=>{\r\n         event.preventDefault()\r\n         addUser()\r\n     }\r\n     const [addUser,{loading}] = useMutation(REGISTER_USER,{\r\n         update(_,result){\r\n             context.login(result)\r\n             props.history.push('/')\r\n         },\r\n         onError(err){\r\n             setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n         }\r\n         ,\r\n         variables: {\r\n             username: values.username,\r\n             email: values.username,\r\n             password: values.password,\r\n             confirmpassword: values.confirmpassword\r\n         }\r\n     })\r\n     const regbtStyle={margin:\"2px 2px 20px 5px\",maxWidth: '80px', maxHeight: '30px', minWidth: '80px', minHeight: '30px'};\r\n     return(\r\n         <div className=\"registerpage\">\r\n            <img src=\"https://i.ibb.co/tm1LGSz/image.png\" className=\"regimgstyle\"/>\r\n            <h2 className=\"regh2-1\">St4rt H4ck1ng T0d4y</h2>\r\n             <Grid className=\"regpanestyle\">\r\n            <Paper elevation={10} className=\"regpaperStyle\">\r\n            <Grid container spacing={0} justify='center' alignItems='center' direction='column'>\r\n            <h2 className=\"regh2-2\">Register</h2>\r\n            </Grid>\r\n            <TextField className=\"reguser\" label=\"Username\" placeholder=\"Username\" name=\"username\" type=\"text\" value={values.username} onChange={onchange} error={errors.username ? true : false} fullWidth required />\r\n            <TextField className=\"regemail\" label=\"Email\" placeholder=\"Email\" name=\"email\" type=\"text\" value={values.email} onChange={onchange} error={errors.email ? true : false} fullWidth required />\r\n            <TextField className=\"regpass\" label=\"Password\" placeholder=\"Password\" name=\"password\" type=\"password\" value={values.password} onChange={onchange} error={errors.password ? true : false} fullWidth required/>\r\n            <TextField className=\"regconpass\" label=\"Confirm Password\" placeholder=\"Confirm Password\" name=\"confirmpassword\" type=\"password\" value={values.confirmpassword} onChange={onchange} error={errors.confirmpassword ? true : false} fullWidth required/>\r\n            <Box textAlign='center'>\r\n            <Button variant='contained' type='submit' color='primary' onClick={onSubmit} style={regbtStyle}>Register</Button>\r\n                </Box>\r\n          </Paper>\r\n        </Grid>\r\n           {Object.keys(errors).length>0 && (\r\n            <div className=\"ui error message\">\r\n            <ul className=\"list\">\r\n                {Object.values(errors).map(value=>{\r\n                   return( <li key={value}>{value}</li>\r\n                )\r\n                })}\r\n            </ul>\r\n        </div>\r\n           )}\r\n           </div>\r\n     )\r\n}\r\n\r\nconst REGISTER_USER =gql`\r\nmutation register(\r\n    $username : String!,\r\n    $email : String!,\r\n    $password: String!,\r\n    $confirmpassword: String!\r\n){\r\n    register(\r\n        registerInput:{\r\n            username: $username,\r\n            email: $email,\r\n            password: $password,\r\n            confirmpassword : $confirmpassword\r\n        }\r\n    )\r\n    {\r\n            id email username createdAt token\r\n        }\r\n}\r\n`\r\nexport default Register"]},"metadata":{},"sourceType":"module"}