{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iam-v0id\\\\OneDrive\\\\Documents\\\\CODE\\\\BZ\\\\Cyber\\\\src\\\\pages\\\\posts.js\";\nimport React, { useContext, Fragment } from 'react';\nimport { gql } from 'graphql-tag';\nimport { Grid, Transition } from 'semantic-ui-react';\nimport PostCard from '../components/PostCard';\nimport { Query } from 'react-apollo';\nimport AuthContext from '../context/auth';\nimport PostForm from '../components/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  return /*#__PURE__*/_jsxDEV(Grid.Row, {\n    columns: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Recent Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: FETCH_POSTS_QUERY,\n        children: ({\n          loading,\n          error,\n          data\n        }) => {\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 34\n          }, this);\n          if (error) console.log(error);\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: data.getPosts.map(post => /*#__PURE__*/_jsxDEV(Transition, {\n              children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                children: /*#__PURE__*/_jsxDEV(PostCard, {\n                  post: post\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 15\n                }, this)\n              }, post.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 20\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Posts;\nconst FETCH_POSTS_QUERY = gql`\n   query getPosts{\n  getPosts{\n   \tid\n    body\n    username\n    createdAt\n    comments{\n      id\n      body\n      username\n      createdAt\n    }\n  likes{\n    id\n    username\n    createdAt\n  }\n  }\n    }\n`;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/iam-v0id/OneDrive/Documents/CODE/BZ/Cyber/src/pages/posts.js"],"names":["React","useContext","Fragment","gql","Grid","Transition","PostCard","Query","AuthContext","PostForm","Posts","FETCH_POSTS_QUERY","loading","error","data","console","log","getPosts","map","post","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,GAAR,QAAkB,aAAlB;AACA,SAAQC,IAAR,EAAaC,UAAb,QAA8B,mBAA9B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AACA,SAASC,KAAT,GAAgB;AACZ,sBACE,QAAC,IAAD,CAAM,GAAN;AAAU,IAAA,OAAO,EAAE,CAAnB;AAAA,4BACA,QAAC,IAAD,CAAM,GAAN;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD,CAAM,GAAN;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAOE,QAAC,IAAD,CAAM,GAAN;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,iBAAd;AAAA,kBAEI,CAAC;AAACC,UAAAA,OAAD;AAASC,UAAAA,KAAT;AAAeC,UAAAA;AAAf,SAAD,KAAwB;AACtB,cAAGF,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,cAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEV,8BAAO,QAAC,QAAD;AAAA,sBACJC,IAAI,CAACG,QAAL,CAAcC,GAAd,CAAkBC,IAAI,iBACpB,QAAC,UAAD;AAAA,qCACP,QAAC,IAAD,CAAM,MAAN;AAAA,uCACE,QAAC,QAAD;AAAU,kBAAA,IAAI,EAAIA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,iBAAkBA,IAAI,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,oBADF;AADI;AAAA;AAAA;AAAA;AAAA,kBAAP;AAWH;AAjBH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCH;;KAlCQV,K;AAmCT,MAAMC,iBAAiB,GAAGR,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAqBA,eAAeO,KAAf","sourcesContent":["import React, { useContext,Fragment } from 'react'\r\nimport {gql} from 'graphql-tag'\r\nimport {Grid,Transition} from 'semantic-ui-react'\r\nimport PostCard from '../components/PostCard'\r\nimport {Query} from 'react-apollo'\r\nimport AuthContext from '../context/auth'\r\nimport PostForm from '../components/PostForm'\r\nfunction Posts(){\r\n    return(\r\n      <Grid.Row columns={3}>\r\n      <Grid.Row>\r\n      <h1>Recent Posts</h1>\r\n      <Grid.Row>\r\n        <PostForm/>\r\n      </Grid.Row>\r\n      </Grid.Row>\r\n        <Grid.Row>\r\n        <Query query={FETCH_POSTS_QUERY}>\r\n          {\r\n            ({loading,error,data})=>{\r\n              if(loading) return <h1>Loading</h1>\r\n              if(error) console.log(error)\r\n              \r\n              return <Fragment>{\r\n                 data.getPosts.map(post=>(\r\n                   <Transition>\r\n            <Grid.Column key={post.id}>\r\n              <PostCard post = {post}/>\r\n            </Grid.Column>\r\n            </Transition>\r\n                 )\r\n          )\r\n              }\r\n              </Fragment>\r\n          }\r\n        }\r\n        </Query>\r\n        </Grid.Row>\r\n      </Grid.Row>\r\n    )\r\n    \r\n}\r\nconst FETCH_POSTS_QUERY = gql`\r\n   query getPosts{\r\n  getPosts{\r\n   \tid\r\n    body\r\n    username\r\n    createdAt\r\n    comments{\r\n      id\r\n      body\r\n      username\r\n      createdAt\r\n    }\r\n  likes{\r\n    id\r\n    username\r\n    createdAt\r\n  }\r\n  }\r\n    }\r\n`\r\nexport default Posts"]},"metadata":{},"sourceType":"module"}