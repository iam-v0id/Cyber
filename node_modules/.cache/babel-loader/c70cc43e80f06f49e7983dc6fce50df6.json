{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iam-v0id\\\\OneDrive\\\\Documents\\\\CODE\\\\BZ\\\\Cyber\\\\src\\\\components\\\\room\\\\SingleRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState } from \"react\";\nimport { gql } from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport { graphql } from \"react-apollo\";\nimport { Form, Grid, Button, Label } from \"semantic-ui-react\";\nimport { Paper, TextField, Box } from \"@material-ui/core\";\nimport { AuthContext } from '../../context/auth';\nimport AddQuestion from './AddQuestion';\nimport DeleteQuestion from \"./DeleteQuestion\";\nimport { Room } from \"@material-ui/icons\";\nimport RoomSolved from './RoomSolved';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleRoom(props) {\n  _s();\n\n  const roomId = props.match.params.roomId;\n  const [values, setValues] = useState(new Map());\n\n  const onchange = e => {\n    const name = e.target.name;\n    const hidden = e.target.value;\n    setValues(values.set(name, hidden));\n  };\n\n  if (localStorage.getItem(roomId) > 0) {} else {\n    localStorage.setItem(roomId, 0);\n  }\n\n  const onsubmit = e => {\n    e.preventDefault();\n    const name = e.target.id;\n\n    if (values.get(name) === e.target.name) {\n      document.getElementById('btn' + name).innerHTML = \"Correct Answer\";\n      document.getElementById('btn' + name).style.backgroundColor = 'green';\n\n      if (localStorage.getItem(name) != 1) {\n        localStorage.setItem(name, 1);\n        var a = {};\n        a.number = 1;\n        var points = parseInt(localStorage.getItem(roomId));\n        a.number = points + 1;\n        localStorage.setItem(roomId, a.number);\n      }\n    } else {\n      //todo pop up asnwer was wrong\n      var a = {};\n      a.number = 0;\n      var points = parseInt(localStorage.getItem(roomId));\n\n      if (points > 0 && localStorage.getItem(name) == 1) {\n        a.number = points - 1;\n        localStorage.setItem(roomId, a.number);\n      }\n\n      localStorage.setItem(name, 0);\n      document.getElementById('btn' + name).innerHTML = \"Wrong Answer\";\n      document.getElementById('btn' + name).style.backgroundColor = 'red';\n    }\n  };\n\n  const {\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Grid.Row, {\n    columns: 3,\n    children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: FETCH_ROOM_QUERY,\n        variables: {\n          roomId\n        },\n        children: ({\n          loading,\n          error,\n          data\n        }) => {\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this);\n          if (error) console.log(error);\n\n          if (data) {\n            var getRoom = data.getRoom;\n          }\n\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"container ui\",\n              children: [user.username == 'Alpha_2018' && /*#__PURE__*/_jsxDEV(AddQuestion, {\n                roomId: getRoom.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 51\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), localStorage.getItem(roomId) == getRoom.questions.length && /*#__PURE__*/_jsxDEV(RoomSolved, {\n                room: getRoom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 80\n              }, this), getRoom.questions.map(room => /*#__PURE__*/_jsxDEV(Grid.Column, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: [room.name, \"  \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 35\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: room.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form, {\n                  id: room.id,\n                  name: room.answer,\n                  onSubmit: onsubmit,\n                  children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                      class: \"ui form success\",\n                      placeholder: \"<cmrcet>Flag</cmrcet>\",\n                      name: room.id,\n                      onChange: onchange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      color: \"teal\",\n                      id: room.id,\n                      children: \"submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      disabled: true,\n                      id: 'btn' + room.id,\n                      color: localStorage.getItem(room.id) == 1 && 'green' || localStorage.getItem(room.id) == 0 && 'red',\n                      children: localStorage.getItem(room.id) == 1 && 'Correct answer' || localStorage.getItem(room.id) == 0 && 'Wrong answer' || 'Status'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 25\n                    }, this), user && user.username === 'Alpha_2018' && /*#__PURE__*/_jsxDEV(DeleteQuestion, {\n                      questionId: room.id,\n                      roomId: getRoom.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 64\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)]\n              }, room.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleRoom, \"nh/y8Z1FAznIiPYLx5e+C7HO+Ew=\");\n\n_c = SingleRoom;\nconst FETCH_ROOM_QUERY = gql`\n  query getRoom($roomId: ID!) {\n    getRoom(roomId: $roomId) {\n      id\n      name\n      createdAt\n      questions {\n        id\n        name\n        description\n        answer\n      }\n      users{\n        username\n      }\n    }\n  }\n`;\nexport default SingleRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleRoom\");","map":{"version":3,"sources":["C:/Users/iam-v0id/OneDrive/Documents/CODE/BZ/Cyber/src/components/room/SingleRoom.js"],"names":["React","Fragment","useContext","useState","gql","Query","graphql","Form","Grid","Button","Label","Paper","TextField","Box","AuthContext","AddQuestion","DeleteQuestion","Room","RoomSolved","SingleRoom","props","roomId","match","params","values","setValues","Map","onchange","e","name","target","hidden","value","set","localStorage","getItem","setItem","onsubmit","preventDefault","id","get","document","getElementById","innerHTML","style","backgroundColor","a","number","points","parseInt","user","FETCH_ROOM_QUERY","loading","error","data","console","log","getRoom","username","questions","length","map","room","description","answer"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from \"react\";\r\nimport { gql } from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { Form, Grid, Button, Label } from \"semantic-ui-react\";\r\nimport { Paper, TextField, Box } from \"@material-ui/core\";\r\nimport {AuthContext} from '../../context/auth'\r\nimport AddQuestion from './AddQuestion'\r\nimport DeleteQuestion from \"./DeleteQuestion\";\r\nimport { Room } from \"@material-ui/icons\";\r\nimport RoomSolved from './RoomSolved'\r\nfunction SingleRoom(props) {\r\n  const roomId = props.match.params.roomId;\r\n  const [values, setValues] = useState(new Map());\r\n  \r\n\r\n  const onchange = (e) => {\r\n    const name = e.target.name;\r\n    const hidden = e.target.value;\r\n    setValues(values.set(name, hidden));\r\n  };\r\n\r\n\r\n  if(localStorage.getItem(roomId)>0){\r\n  }\r\n  else{\r\n  localStorage.setItem(roomId, 0);\r\n  }\r\n  \r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.id;\r\n    \r\n    if (values.get(name) === e.target.name) {\r\n      document.getElementById('btn'+name).innerHTML=\"Correct Answer\"\r\n      document. getElementById('btn'+name). style. backgroundColor = 'green';\r\n    if(localStorage.getItem(name)!=1){\r\n      localStorage.setItem(name, 1);\r\n      var a ={}\r\n      a.number=1\r\n      var points = parseInt(localStorage.getItem(roomId))\r\n      a.number = points+1\r\n      localStorage.setItem(roomId, a.number)\r\n    }\r\n    } else {\r\n      //todo pop up asnwer was wrong\r\n      var a ={}\r\n      a.number=0\r\n      var points = parseInt(localStorage.getItem(roomId))\r\n      if(points>0 && localStorage.getItem(name)==1){\r\n      a.number = points-1\r\n      localStorage.setItem(roomId, a.number);\r\n      }\r\n      localStorage.setItem(name, 0);\r\n      document.getElementById('btn'+name).innerHTML=\"Wrong Answer\"\r\n      document. getElementById('btn'+name). style. backgroundColor = 'red' \r\n    }\r\n   \r\n  };\r\n  const {user} = useContext(AuthContext)\r\n\r\n  return (\r\n    <Grid.Row columns={3}>\r\n      <Grid.Row>\r\n        <Query query={FETCH_ROOM_QUERY} variables={{ roomId }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h1>Loading</h1>;\r\n            if (error) console.log(error);\r\n            if (data) {\r\n              var getRoom = data.getRoom;\r\n              \r\n            }\r\n            return (\r\n              <Fragment >\r\n                <div class=\"container ui\">\r\n                  {user.username=='Alpha_2018' && <AddQuestion roomId={getRoom.id} />}\r\n                  <br></br>\r\n                  <br></br>\r\n                  {(localStorage.getItem(roomId)==getRoom.questions.length) && <RoomSolved  room={getRoom}/>}\r\n\r\n                {getRoom.questions.map((room) => (\r\n                  <Grid.Column   key={room.id}>\r\n                    <span><strong><h3>{room.name}  </h3> </strong></span>\r\n                    <span>{room.description}</span>\r\n                    <Form id={room.id} name={room.answer} onSubmit={onsubmit}>\r\n                      <Form.Field>\r\n                        <Form.Input\r\n                          class=\"ui form success\"\r\n                          placeholder=\"<cmrcet>Flag</cmrcet>\"\r\n                          name={room.id}\r\n                          onChange={onchange}\r\n                        />\r\n                        <Button\r\n                          type=\"submit\"\r\n                          color=\"teal\"\r\n                          id={room.id}\r\n                        >\r\n                          submit\r\n                        </Button>\r\n                        \r\n                        <Button disabled id={'btn'+room.id} color={(localStorage.getItem(room.id)==1 && 'green') || (localStorage.getItem(room.id)==0 && 'red')} >{(localStorage.getItem(room.id)==1 && 'Correct answer') || (localStorage.getItem(room.id)==0 && 'Wrong answer') || ('Status')}</Button>\r\n                      {user && user.username==='Alpha_2018' && <DeleteQuestion questionId={room.id} roomId={getRoom.id} />}\r\n                      \r\n                      </Form.Field>\r\n                    </Form>\r\n                    <br></br>\r\n                    <hr ></hr>\r\n                    <br></br>\r\n                  </Grid.Column>\r\n                ))\r\n                \r\n                }\r\n                </div>\r\n              </Fragment>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Grid.Row>\r\n    </Grid.Row>\r\n  );\r\n}\r\n\r\nconst FETCH_ROOM_QUERY = gql`\r\n  query getRoom($roomId: ID!) {\r\n    getRoom(roomId: $roomId) {\r\n      id\r\n      name\r\n      createdAt\r\n      questions {\r\n        id\r\n        name\r\n        description\r\n        answer\r\n      }\r\n      users{\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default SingleRoom;"]},"metadata":{},"sourceType":"module"}