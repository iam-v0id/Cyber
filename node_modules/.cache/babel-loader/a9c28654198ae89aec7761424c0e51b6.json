{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iam-v0id\\\\OneDrive\\\\Documents\\\\CODE\\\\BZ\\\\Cyber\\\\src\\\\components\\\\room\\\\RoomSolved.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AuthContext } from '../../context/auth';\nimport { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from 'react-apollo';\nimport { useState } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RoomSolved(props) {\n  _s();\n\n  var room = props.room; // console.log(room)\n\n  var roomId = room.id;\n  var f = 0;\n  const user = useContext(AuthContext);\n  const [values, setValues] = useState({\n    roomId: roomId\n  });\n\n  const onSubmit = event => {\n    room.users.map(name => {\n      // console.log(name.username)\n      if (name.username == user.user.username) {\n        f = 1;\n        localStorage.setItem('user' + roomId, 1);\n      }\n    });\n\n    if (f != 1) {\n      addusertoroom();\n      localStorage.setItem('user' + roomId, 1);\n    }\n  };\n\n  const [addusertoroom, {\n    error\n  }] = useMutation(ADD_USER_MUTATION, {\n    variables: values,\n\n    update(_, result) {\n      console.log(\"added room\", result);\n    },\n\n    if(error) {\n      console.log('error');\n    }\n\n  }); //addusertoroom()\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"ui success message\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      class: \"close icon\",\n      onClick: onclick,\n      hidden: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"header\",\n      children: \"Your Successfully completed the room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Submit and continue hacking the next room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: onSubmit,\n      children: localStorage.getItem('user' + roomId) == 1 && 'submitted' || localStorage.getItem('user' + roomId) != 1 && 'submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n}\n\n_s(RoomSolved, \"GYzyV5ElsoMhzkK8lm51xdnfbdk=\", false, function () {\n  return [useMutation];\n});\n\n_c = RoomSolved;\nconst ADD_USER_MUTATION = gql`\n    mutation addusertoroom($roomId: ID!){\n            addusertoroom(roomId: $roomId){\n             id\n        }\n    }\n`;\nexport default RoomSolved;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomSolved\");","map":{"version":3,"sources":["C:/Users/iam-v0id/OneDrive/Documents/CODE/BZ/Cyber/src/components/room/RoomSolved.js"],"names":["React","AuthContext","useContext","gql","useMutation","useState","Button","RoomSolved","props","room","roomId","id","f","user","values","setValues","onSubmit","event","users","map","name","username","localStorage","setItem","addusertoroom","error","ADD_USER_MUTATION","variables","update","_","result","console","log","if","onclick","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,WAAR,QAA0B,cAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,MAAR,QAAqB,mBAArB;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AACtB,MAAIC,IAAI,GAACD,KAAK,CAACC,IAAf,CADsB,CAEvB;;AACC,MAAIC,MAAM,GAACD,IAAI,CAACE,EAAhB;AACA,MAAIC,CAAC,GAAC,CAAN;AACA,QAAMC,IAAI,GAAGX,UAAU,CAACD,WAAD,CAAvB;AACA,QAAM,CAACa,MAAD,EAAQC,SAAR,IAAqBV,QAAQ,CAAC;AAClCK,IAAAA,MAAM,EAAEA;AAD0B,GAAD,CAAnC;;AAGE,QAAMM,QAAQ,GAAIC,KAAD,IAAS;AACxBR,IAAAA,IAAI,CAACS,KAAL,CAAWC,GAAX,CAAgBC,IAAD,IAAQ;AACtB;AACC,UAAGA,IAAI,CAACC,QAAL,IAAeR,IAAI,CAACA,IAAL,CAAUQ,QAA5B,EAAqC;AACnCT,QAAAA,CAAC,GAAC,CAAF;AACEU,QAAAA,YAAY,CAACC,OAAb,CAAqB,SAAOb,MAA5B,EAAmC,CAAnC;AACH;AACF,KAND;;AAOA,QAAGE,CAAC,IAAE,CAAN,EAAQ;AACNY,MAAAA,aAAa;AACbF,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAAOb,MAA5B,EAAmC,CAAnC;AACD;AACJ,GAZC;;AAcH,QAAM,CAACc,aAAD,EAAe;AAACC,IAAAA;AAAD,GAAf,IAA0BrB,WAAW,CAACsB,iBAAD,EAAmB;AAC3DC,IAAAA,SAAS,EAAEb,MADgD;;AAE3Dc,IAAAA,MAAM,CAACC,CAAD,EAAGC,MAAH,EAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBF,MAAzB;AACH,KAJ0D;;AAK3DG,IAAAA,EAAE,CAACR,KAAD,EAAO;AACPM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAP0D,GAAnB,CAA3C,CAvBuB,CAgCzB;;AAEG,sBAAO;AAAK,IAAA,KAAK,EAAC,oBAAX;AAAA,4BACP;AAAG,MAAA,KAAK,EAAC,YAAT;AAAsB,MAAA,OAAO,EAAEE,OAA/B;AAAwC,MAAA,MAAM;AAA9C;AAAA;AAAA;AAAA;AAAA,YADO,eAEN;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFM,eAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALK,eAML,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAElB,QAA/B;AAAA,gBAA4CM,YAAY,CAACa,OAAb,CAAqB,SAAOzB,MAA5B,KAAqC,CAAtC,IAA4C,WAA7C,IAA8DY,YAAY,CAACa,OAAb,CAAqB,SAAOzB,MAA5B,KAAqC,CAAtC,IAA4C;AAAnJ;AAAA;AAAA;AAAA;AAAA,YANK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH;;GA1CQH,U;UAuB0BH,W;;;KAvB1BG,U;AA2CT,MAAMmB,iBAAiB,GAAGvB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,eAAeI,UAAf","sourcesContent":["import React from 'react'\r\nimport {AuthContext} from '../../context/auth'\r\nimport {useContext} from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {useMutation} from 'react-apollo'\r\nimport {useState} from 'react'\r\nimport {Button} from 'semantic-ui-react'\r\nfunction RoomSolved(props){\r\n    var room=props.room;\r\n   // console.log(room)\r\n    var roomId=room.id\r\n    var f=0;\r\n    const user = useContext(AuthContext);\r\n    const [values,setValues] = useState({\r\n      roomId: roomId\r\n      })\r\n      const onSubmit = (event)=>{\r\n        room.users.map((name)=>{\r\n         // console.log(name.username)\r\n          if(name.username==user.user.username){\r\n            f=1\r\n              localStorage.setItem('user'+roomId,1);\r\n          }\r\n        })\r\n        if(f!=1){\r\n          addusertoroom()\r\n          localStorage.setItem('user'+roomId,1);\r\n        }\r\n    }\r\n    \r\n   const [addusertoroom,{error}] = useMutation(ADD_USER_MUTATION,{\r\n      variables: values,\r\n      update(_,result){\r\n          console.log(\"added room\",result)\r\n      } ,\r\n      if(error){\r\n        console.log('error')\r\n      }\r\n  }) \r\n //addusertoroom()\r\n\r\n    return(<div class=\"ui success message\">\r\n    <i class=\"close icon\" onClick={onclick} hidden></i>\r\n     <div class=\"header\">\r\n            Your Successfully completed the room\r\n    </div>\r\n      <p>Submit and continue hacking the next room</p>\r\n      <Button type=\"submit\" onClick={onSubmit}>{((localStorage.getItem('user'+roomId)==1) && 'submitted') ||((localStorage.getItem('user'+roomId)!=1) && 'submit')}</Button>\r\n        </div>)\r\n}\r\nconst ADD_USER_MUTATION = gql`\r\n    mutation addusertoroom($roomId: ID!){\r\n            addusertoroom(roomId: $roomId){\r\n             id\r\n        }\r\n    }\r\n`\r\n\r\nexport default RoomSolved"]},"metadata":{},"sourceType":"module"}