[{"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\index.js":"1","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\reportWebVitals.js":"2","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\App.js":"3","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\Register.js":"4","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\posts.js":"5","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\Home.js":"6","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\Login.js":"7","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\context\\RoomsRoute.js":"8","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\context\\PostsRoute.js":"9","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\context\\auth.js":"10","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\room\\SingleRoom.js":"11","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\context\\AuthRoute.js":"12","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\Rooms.js":"13","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\MenuBar.js":"14","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\PostForm.js":"15","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\PostCard.js":"16","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\room\\DeleteQuestion.js":"17","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\room\\AddQuestion.js":"18","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\room\\RoomSolved.js":"19","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\RoomCard.js":"20","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\RoomForm.js":"21","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\DeleteButton.js":"22","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\util\\graphql.js":"23","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\DeleteRoom.js":"24"},{"size":444,"mtime":1623860546525,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1623860546545,"results":"27","hashOfConfig":"26"},{"size":1877,"mtime":1623860546498,"results":"28","hashOfConfig":"26"},{"size":3808,"mtime":1623860546533,"results":"29","hashOfConfig":"26"},{"size":1420,"mtime":1623860546544,"results":"30","hashOfConfig":"26"},{"size":164,"mtime":1623860546528,"results":"31","hashOfConfig":"26"},{"size":3114,"mtime":1623860546530,"results":"32","hashOfConfig":"26"},{"size":457,"mtime":1623860546522,"results":"33","hashOfConfig":"26"},{"size":457,"mtime":1623860546521,"results":"34","hashOfConfig":"26"},{"size":1472,"mtime":1623860546524,"results":"35","hashOfConfig":"26"},{"size":4728,"mtime":1623860546518,"results":"36","hashOfConfig":"26"},{"size":448,"mtime":1623860546520,"results":"37","hashOfConfig":"26"},{"size":2187,"mtime":1623860546535,"results":"38","hashOfConfig":"26"},{"size":1959,"mtime":1623860546504,"results":"39","hashOfConfig":"26"},{"size":1912,"mtime":1623860546508,"results":"40","hashOfConfig":"26"},{"size":1321,"mtime":1623860546507,"results":"41","hashOfConfig":"26"},{"size":764,"mtime":1623860546515,"results":"42","hashOfConfig":"26"},{"size":2090,"mtime":1623860546514,"results":"43","hashOfConfig":"26"},{"size":1753,"mtime":1623860546517,"results":"44","hashOfConfig":"26"},{"size":1539,"mtime":1623860546510,"results":"45","hashOfConfig":"26"},{"size":1335,"mtime":1623860546513,"results":"46","hashOfConfig":"26"},{"size":682,"mtime":1623860546500,"results":"47","hashOfConfig":"26"},{"size":294,"mtime":1623860546548,"results":"48","hashOfConfig":"26"},{"size":705,"mtime":1623860546501,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1daxr3l",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":6,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\index.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\reportWebVitals.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\App.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\Register.js",["108","109"],"import React,{useContext,useState} from 'react'\r\nimport { Grid, Paper, TextField,Button,Box } from '@material-ui/core';\r\nimport {gql} from 'graphql-tag'\r\nimport {useMutation} from 'react-apollo'\r\nimport {AuthContext} from '../context/auth'\r\nimport './Register.css'\r\nfunction Register(props){\r\n    const context  = useContext(AuthContext)\r\n      const [errors,setErrors] = useState({})\r\n     const [values,setValues] = useState({\r\n         username: '',\r\n         email: '',\r\n         password: '',\r\n         confirmpassword: ''\r\n     })\r\n     const onchange = (event)=>{\r\n        setValues({...values,[event.target.name]:event.target.value})\r\n     }\r\n     const onSubmit = (event)=>{\r\n         event.preventDefault()\r\n         addUser()\r\n     }\r\n     const [addUser,{loading}] = useMutation(REGISTER_USER,{\r\n         update(_,result){\r\n             context.login(result)\r\n             props.history.push('/')\r\n         },\r\n         onError(err){\r\n             setErrors(err.graphQLErrors[0].extensions.exception.errors)\r\n         }\r\n         ,\r\n         variables: {\r\n             username: values.username,\r\n             email: values.username,\r\n             password: values.password,\r\n             confirmpassword: values.confirmpassword\r\n         }\r\n     })\r\n     const regbtStyle={margin:\"2px 2px 20px 5px\",maxWidth: '80px', maxHeight: '30px', minWidth: '80px', minHeight: '30px'};\r\n     return(\r\n         <div className=\"registerpage\">\r\n            <img src=\"https://i.ibb.co/tm1LGSz/image.png\" className=\"regimgstyle\"/>\r\n            <h2 className=\"regh2-1\">St4rt H4ck1ng T0d4y</h2>\r\n             <Grid className=\"regpanestyle\">\r\n            <Paper elevation={10} className=\"regpaperStyle\">\r\n            <Grid container spacing={0} justify='center' alignItems='center' direction='column'>\r\n            <h2 className=\"regh2-2\">Register</h2>\r\n            </Grid>\r\n            <TextField className=\"reguser\" label=\"Username\" placeholder=\"Username\" name=\"username\" type=\"text\" value={values.username} onChange={onchange} error={errors.username ? true : false} fullWidth required />\r\n            <TextField className=\"regemail\" label=\"Email\" placeholder=\"Email\" name=\"email\" type=\"text\" value={values.email} onChange={onchange} error={errors.email ? true : false} fullWidth required />\r\n            <TextField className=\"regpass\" label=\"Password\" placeholder=\"Password\" name=\"password\" type=\"password\" value={values.password} onChange={onchange} error={errors.password ? true : false} fullWidth required/>\r\n            <TextField className=\"regconpass\" label=\"Confirm Password\" placeholder=\"Confirm Password\" name=\"confirmpassword\" type=\"password\" value={values.confirmpassword} onChange={onchange} error={errors.confirmpassword ? true : false} fullWidth required/>\r\n            <Box textAlign='center'>\r\n            <Button variant='contained' type='submit' color='primary' onClick={onSubmit} style={regbtStyle}>Register</Button>\r\n                </Box>\r\n          </Paper>\r\n        </Grid>\r\n           {Object.keys(errors).length>0 && (\r\n            <div className=\"ui error message\">\r\n            <ul className=\"list\">\r\n                {Object.values(errors).map(value=>{\r\n                   return( <li key={value}>{value}</li>\r\n                )\r\n                })}\r\n            </ul>\r\n        </div>\r\n           )}\r\n           </div>\r\n     )\r\n}\r\n\r\nconst REGISTER_USER =gql`\r\nmutation register(\r\n    $username : String!,\r\n    $email : String!,\r\n    $password: String!,\r\n    $confirmpassword: String!\r\n){\r\n    register(\r\n        registerInput:{\r\n            username: $username,\r\n            email: $email,\r\n            password: $password,\r\n            confirmpassword : $confirmpassword\r\n        }\r\n    )\r\n    {\r\n            id email username createdAt token\r\n        }\r\n}\r\n`\r\nexport default Register","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\posts.js",["110","111"],"import React, { useContext,Fragment } from 'react'\r\nimport {gql} from 'graphql-tag'\r\nimport {Grid,Transition} from 'semantic-ui-react'\r\nimport PostCard from '../components/PostCard'\r\nimport {Query} from 'react-apollo'\r\nimport AuthContext from '../context/auth'\r\nimport PostForm from '../components/PostForm'\r\nfunction Posts(){\r\n    return(\r\n      <Grid.Row columns={3}>\r\n      <Grid.Row>\r\n      <h1>Recent Posts</h1>\r\n      <Grid.Row>\r\n        <PostForm/>\r\n      </Grid.Row>\r\n      </Grid.Row>\r\n        <Grid.Row>\r\n        <Query query={FETCH_POSTS_QUERY}>\r\n          {\r\n            ({loading,error,data})=>{\r\n              if(loading) return <h1>Loading</h1>\r\n              if(error) console.log(error)\r\n              \r\n              return <Fragment>{\r\n                 data.getPosts.map(post=>(\r\n                   <Transition>\r\n            <Grid.Column key={post.id}>\r\n              <PostCard post = {post}/>\r\n            </Grid.Column>\r\n            </Transition>\r\n                 )\r\n          )\r\n              }\r\n              </Fragment>\r\n          }\r\n        }\r\n        </Query>\r\n        </Grid.Row>\r\n      </Grid.Row>\r\n    )\r\n    \r\n}\r\nconst FETCH_POSTS_QUERY = gql`\r\n   query getPosts{\r\n  getPosts{\r\n   \tid\r\n    body\r\n    username\r\n    createdAt\r\n    comments{\r\n      id\r\n      body\r\n      username\r\n      createdAt\r\n    }\r\n  likes{\r\n    id\r\n    username\r\n    createdAt\r\n  }\r\n  }\r\n    }\r\n`\r\nexport default Posts","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\Home.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\Login.js",["112","113","114"],"import React,{useContext,useState} from 'react'\r\nimport { Grid, Paper, TextField,Button,Box } from '@material-ui/core';\r\nimport {gql} from 'graphql-tag'\r\nimport {useMutation} from 'react-apollo'\r\nimport {AuthContext} from '../context/auth'\r\nimport './Login.css'\r\nfunction Login(props){\r\n     const context = useContext(AuthContext)\r\n      const [errors,setErrors] = useState({})\r\n     const [values,setValues] = useState({\r\n         username: '',\r\n         password: '',\r\n     })\r\n     const onchange = (event)=>{\r\n        setValues({...values,[event.target.name]:event.target.value})\r\n     }\r\n     const onSubmit = (event)=>{\r\n         loginuser()\r\n     }\r\n     const [loginuser,{loading}] = useMutation(LOGIN_USER,{\r\n         update(_,result){\r\n            context.login(result.data.login)\r\n             props.history.push('/')\r\n         },\r\n         onError(err){\r\n             setErrors(err&&err.graphQLErrors[0]?err.graphQLErrors[0].extensions.exception.errors:{})\r\n         }\r\n         ,\r\n         variables: {\r\n             username: values.username,\r\n             password: values.password\r\n         }\r\n     })\r\n     const loginpage={}\r\n     const btStyle={margin:\"2px 2px 20px 5px\",maxWidth: '70px', maxHeight: '30px', minWidth: '70px', minHeight: '30px'};\r\n     return(\r\n         <body id=\"body\">\r\n         <div className=\"loginpage\">\r\n            <img src=\"https://i.ibb.co/tm1LGSz/image.png\" className=\"imgstyle\"/>\r\n            <h2 className=\"loginh2-1\">For H4ck3r5</h2>\r\n            <div> \r\n            <Grid className=\"panestyle\">\r\n            <Paper elevation={10} className=\"paperStyle\">\r\n            <Grid container spacing={0} justify='center' alignItems='center' direction='column'>\r\n            <h2 className=\"loginh2-2\">Login</h2>\r\n            </Grid>\r\n            <TextField className=\"loginuser\" label=\"Username\" placeholder=\"Username\" name=\"username\" type=\"text\" value={values.username} onChange={onchange} error={errors.username ? true : false} fullWidth required />\r\n            <TextField className=\"loginpass\" label=\"Password\" placeholder=\"Password\" name=\"password\" type=\"password\" value={values.password} onChange={onchange} error={errors.password ? true : false} fullWidth required/>\r\n            <Box textAlign='center'>\r\n            <Button variant='contained' type='submit' color='primary' onClick={onSubmit} style={btStyle}>Login</Button>\r\n                </Box>\r\n          </Paper>\r\n        </Grid>\r\n           {Object.keys(errors).length>0 && (\r\n            <div className=\"ui error message\">\r\n            <ul className=\"list\">\r\n                {Object.values(errors).map(value=>{\r\n                   return( <li key={value}>{value}</li>\r\n                )\r\n                })}\r\n            </ul>\r\n            </div>\r\n           )}\r\n           </div>\r\n           </div>\r\n           </body>\r\n     )\r\n}\r\n\r\nconst LOGIN_USER =gql`\r\nmutation login(\r\n    $username : String!,\r\n    $password: String!  \r\n){\r\n    login(\r\n            username: $username,\r\n            password: $password\r\n    )\r\n    {\r\n            id email username createdAt token\r\n        }\r\n}\r\n`\r\nexport default Login","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\context\\RoomsRoute.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\context\\PostsRoute.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\context\\auth.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\room\\SingleRoom.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { Fragment, useContext, useState } from \"react\";\r\nimport { gql } from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { graphql } from \"react-apollo\";\r\nimport { Form, Grid, Button, Label } from \"semantic-ui-react\";\r\nimport { Paper, TextField, Box } from \"@material-ui/core\";\r\nimport {AuthContext} from '../../context/auth'\r\nimport AddQuestion from './AddQuestion'\r\nimport DeleteQuestion from \"./DeleteQuestion\";\r\nimport { Room } from \"@material-ui/icons\";\r\nimport RoomSolved from './RoomSolved'\r\nfunction SingleRoom(props) {\r\n  const roomId = props.match.params.roomId;\r\n  const [values, setValues] = useState(new Map());\r\n  \r\n\r\n  const onchange = (e) => {\r\n    const name = e.target.name;\r\n    const hidden = e.target.value;\r\n    setValues(values.set(name, hidden));\r\n  };\r\n\r\n\r\n  if(localStorage.getItem(roomId)>0){\r\n  }\r\n  else{\r\n  localStorage.setItem(roomId, 0);\r\n  }\r\n  \r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.id;\r\n    \r\n    if (values.get(name) === e.target.name) {\r\n      document.getElementById('btn'+name).innerHTML=\"Correct Answer\"\r\n      document. getElementById('btn'+name). style. backgroundColor = 'green';\r\n    if(localStorage.getItem(name)!=1){\r\n      localStorage.setItem(name, 1);\r\n      var a ={}\r\n      a.number=1\r\n      var points = parseInt(localStorage.getItem(roomId))\r\n      a.number = points+1\r\n      localStorage.setItem(roomId, a.number)\r\n    }\r\n    } else {\r\n      //todo pop up asnwer was wrong\r\n      var a ={}\r\n      a.number=0\r\n      var points = parseInt(localStorage.getItem(roomId))\r\n      if(points>0 && localStorage.getItem(name)==1){\r\n      a.number = points-1\r\n      localStorage.setItem(roomId, a.number);\r\n      }\r\n      localStorage.setItem(name, 0);\r\n      document.getElementById('btn'+name).innerHTML=\"Wrong Answer\"\r\n      document. getElementById('btn'+name). style. backgroundColor = 'red' \r\n    }\r\n   \r\n  };\r\n  const {user} = useContext(AuthContext)\r\n\r\n  return (\r\n    <Grid.Row columns={3}>\r\n      <Grid.Row>\r\n        <Query query={FETCH_ROOM_QUERY} variables={{ roomId }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h1>Loading</h1>;\r\n            if (error) console.log(error);\r\n            if (data) {\r\n              var getRoom = data.getRoom;\r\n              \r\n            }\r\n            return (\r\n              <Fragment >\r\n                <div class=\"container ui\">\r\n                  {user.username=='Alpha_2018' && <AddQuestion roomId={getRoom.id} />}\r\n                  <br></br>\r\n                  <br></br>\r\n                  {(localStorage.getItem(roomId)==getRoom.questions.length) && <RoomSolved  room={getRoom}/>}\r\n\r\n                {getRoom.questions.map((room) => (\r\n                  <Grid.Column   key={room.id}>\r\n                    <span><strong><h3>{room.name}  </h3> </strong></span>\r\n                    <span>{room.description}</span>\r\n                    <Form id={room.id} name={room.answer} onSubmit={onsubmit}>\r\n                      <Form.Field>\r\n                        <Form.Input\r\n                          class=\"ui form success\"\r\n                          placeholder=\"<cmrcet>Flag</cmrcet>\"\r\n                          name={room.id}\r\n                          onChange={onchange}\r\n                        />\r\n                        <Button\r\n                          type=\"submit\"\r\n                          color=\"teal\"\r\n                          id={room.id}\r\n                        >\r\n                          submit\r\n                        </Button>\r\n                        \r\n                        <Button disabled id={'btn'+room.id} color={(localStorage.getItem(room.id)==1 && 'green') || (localStorage.getItem(room.id)==0 && 'red')} >{(localStorage.getItem(room.id)==1 && 'Correct answer') || (localStorage.getItem(room.id)==0 && 'Wrong answer') || ('Status')}</Button>\r\n                      {user && user.username==='Alpha_2018' && <DeleteQuestion questionId={room.id} roomId={getRoom.id} />}\r\n                      \r\n                      </Form.Field>\r\n                    </Form>\r\n                    <br></br>\r\n                    <hr ></hr>\r\n                    <br></br>\r\n                  </Grid.Column>\r\n                ))\r\n                \r\n                }\r\n                </div>\r\n              </Fragment>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Grid.Row>\r\n    </Grid.Row>\r\n  );\r\n}\r\n\r\nconst FETCH_ROOM_QUERY = gql`\r\n  query getRoom($roomId: ID!) {\r\n    getRoom(roomId: $roomId) {\r\n      id\r\n      name\r\n      createdAt\r\n      questions {\r\n        id\r\n        name\r\n        description\r\n        answer\r\n      }\r\n      users{\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default SingleRoom;","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\context\\AuthRoute.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\pages\\Rooms.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\MenuBar.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\PostForm.js",["137","138","139","140"],"import React,{useContext,useState} from 'react'\r\nimport {Button, Form} from 'semantic-ui-react'\r\nimport { useMutation} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport {FETCH_POSTS_QUERY} from '../util/graphql'\r\nfunction PostForm(props){\r\n      const [errors,setErrors] = useState({})\r\n     const [values,setValues] = useState({\r\n         body: ''\r\n     })\r\n     const onchange = (event)=>{\r\n        setValues({...values,[event.target.name]:event.target.value})\r\n     }\r\n     const onSubmit = (event)=>{\r\n         event.preventDefault()\r\n         createPost()\r\n     }\r\n    const [createPost,{error}] = useMutation(CREATE_POST_MUTATION,{\r\n        variables: values,\r\n        update(proxy,result){\r\n            const data=proxy.readQuery({\r\n                query: FETCH_POSTS_QUERY\r\n            })\r\n            data.getPosts = [result.data.createPost,...data.getPosts]\r\n            proxy.writeQuery({query:FETCH_POSTS_QUERY,data})\r\n            values.body = ''\r\n            props.history.push('/Posts')\r\n        }\r\n    })\r\n    return(\r\n        <Form onSubmit={onSubmit}>\r\n            <h2>Create Post:</h2>\r\n            <Form.Field>\r\n                <Form.Input\r\n                placeholder='Create Post'\r\n                name='body'\r\n                onChange={onchange}\r\n                value={values.body}\r\n                />\r\n                <Button type=\"submit\" color=\"teal\">Create Post</Button>\r\n            </Form.Field>\r\n        </Form>\r\n    )\r\n}\r\nconst CREATE_POST_MUTATION = gql`\r\n    mutation createPost($body: String!){\r\n        createPost(body:$body){\r\n            id\r\n            body\r\n            createdAt\r\n            username\r\n            likes{\r\n                id\r\n                username\r\n                createdAt\r\n            }\r\n            comments{\r\n                id \r\n                body\r\n                createdAt\r\n            }\r\n        }\r\n    }\r\n`\r\nexport default PostForm","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\PostCard.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\room\\DeleteQuestion.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\room\\AddQuestion.js",["141","142"],"import React,{useContext,useState} from 'react'\r\nimport {Button, Form} from 'semantic-ui-react'\r\nimport { useMutation} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nfunction AddQuestion(roomId){\r\n    const [values,setValues] = useState({\r\n        roomId: roomId.roomId,\r\n        name: ' ',\r\n        description: ' ',\r\n        answer: ' '\r\n    })\r\n    const onchange = (event)=>{\r\n       setValues({...values,[event.target.name]:event.target.value})\r\n    }\r\n    const onSubmit = (event)=>{\r\n        addQuestion()\r\n    }\r\n   const [addQuestion,{error}] = useMutation(CREATE_ADD_MUTATION,{\r\n       variables: values,\r\n      /* update(_,result){\r\n           console.log(result)\r\n       } */\r\n   })\r\n   const crbtstyle={margin:\"0vh 0vh 0vh 5vh\"}\r\n   return(\r\n       <Form onSubmit={onSubmit}>\r\n           <h2 className=\"crh2\">Add question</h2>\r\n           <Form.Field>\r\n               Question Name\r\n               <Form.Input\r\n               placeholder='Question name'\r\n               name='name'\r\n               onChange={onchange}\r\n               value={values.name}\r\n               className=\"crinput\"\r\n               />\r\n               Description\r\n               <Form.Input\r\n               placeholder='Description'\r\n               name='description'\r\n               onChange={onchange}\r\n               value={values.description}\r\n               className=\"crinput\"\r\n               />\r\n               Flag\r\n               <Form.Input\r\n               placeholder='Answer'\r\n               name='answer'\r\n               onChange={onchange}\r\n               value={values.answer}\r\n               className=\"crinput\"\r\n               />\r\n               <Button style={crbtstyle} type=\"submit\" color=\"teal\">Add new Question</Button>\r\n           </Form.Field>\r\n       </Form>\r\n   )\r\n}\r\nconst CREATE_ADD_MUTATION = gql`\r\n    mutation addQuestion($roomId: ID!,$name: String!,$description: String!,$answer: String!){\r\n        addQuestion(questionInput:{roomId: $roomId, name: $name, description: $description, answer: $answer}){\r\n            id\r\n        }\r\n    }\r\n`\r\nexport default AddQuestion","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\room\\RoomSolved.js",["143","144","145","146","147","148","149"],"import React from 'react'\r\nimport {AuthContext} from '../../context/auth'\r\nimport {useContext} from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {useMutation} from 'react-apollo'\r\nimport {useState} from 'react'\r\nimport {Button} from 'semantic-ui-react'\r\nfunction RoomSolved(props){\r\n    var room=props.room;\r\n   // console.log(room)\r\n    var roomId=room.id\r\n    var f=0;\r\n    const user = useContext(AuthContext);\r\n    const [values,setValues] = useState({\r\n      roomId: roomId\r\n      })\r\n      const onSubmit = (event)=>{\r\n        room.users.map((name)=>{\r\n         // console.log(name.username)\r\n          if(name.username==user.user.username){\r\n            f=1\r\n              localStorage.setItem('user'+roomId,1);\r\n          }\r\n        })\r\n        if(f!=1){\r\n          addusertoroom()\r\n          localStorage.setItem('user'+roomId,1);\r\n        }\r\n    }\r\n    \r\n   const [addusertoroom,{error}] = useMutation(ADD_USER_MUTATION,{\r\n      variables: values,\r\n      update(_,result){\r\n          console.log(\"added room\",result)\r\n      } ,\r\n      if(error){\r\n        console.log('error')\r\n      }\r\n  }) \r\n //addusertoroom()\r\n\r\n    return(<div class=\"ui success message\">\r\n    <i class=\"close icon\" onClick={onclick} hidden></i>\r\n     <div class=\"header\">\r\n            Your Successfully completed the room\r\n    </div>\r\n      <p>Submit and continue hacking the next room</p>\r\n      <Button type=\"submit\" onClick={onSubmit}>{((localStorage.getItem('user'+roomId)==1) && 'submitted') ||((localStorage.getItem('user'+roomId)!=1) && 'submit')}</Button>\r\n        </div>)\r\n}\r\nconst ADD_USER_MUTATION = gql`\r\n    mutation addusertoroom($roomId: ID!){\r\n            addusertoroom(roomId: $roomId){\r\n             id\r\n        }\r\n    }\r\n`\r\n\r\nexport default RoomSolved","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\RoomCard.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\RoomForm.js",["150","151"],"import React,{useContext,useState} from 'react'\r\nimport {Button, Form} from 'semantic-ui-react'\r\nimport { useMutation} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport './RoomForm.css'\r\nfunction RoomForm(){\r\n    const [values,setValues] = useState({\r\n        name: ''\r\n    })\r\n    const onchange = (event)=>{\r\n       setValues({...values,[event.target.name]:event.target.value})\r\n    }\r\n    const onSubmit = (event)=>{\r\n        createRoom()\r\n    }\r\n   const [createRoom,{error}] = useMutation(CREATE_ROOM_MUTATION,{\r\n       variables: values,\r\n       update(_,result){\r\n           console.log(result)\r\n       } \r\n   })\r\n   const crbtstyle={margin:\"0vh 0vh 0vh 5vh\"}\r\n   return(\r\n       <Form onSubmit={onSubmit}>\r\n           <h2 className=\"crh2\">Create Room</h2>\r\n           <Form.Field>\r\n               <Form.Input\r\n               placeholder='Create Room'\r\n               name='name'\r\n               onChange={onchange}\r\n               value={values.name}\r\n               className=\"crinput\"\r\n               />\r\n               <Button style={crbtstyle} type=\"submit\" color=\"teal\">Create Room</Button>\r\n           </Form.Field>\r\n       </Form>\r\n   )\r\n}\r\nconst CREATE_ROOM_MUTATION = gql`\r\n    mutation createRoom($name: String!){\r\n        createRoom(name:$name){\r\n            id\r\n        }\r\n    }\r\n`\r\nexport default RoomForm","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\DeleteButton.js",["152"],"import React from 'react'\r\nimport {gql} from 'graphql-tag'\r\nimport {Button,Icon} from 'semantic-ui-react'\r\nimport {useMutation} from 'react-apollo'\r\n\r\nfunction DeleteButton(postId){\r\n    var postId = postId.postId\r\n    const [deletepost] = useMutation(DELETE_POST,{\r\n        update(){\r\n\r\n        },\r\n        variables:{\r\n            postId\r\n        }\r\n    })\r\n    console.log(postId)\r\n    return(\r\n        <Button as=\"div\" color=\"red\" floated=\"right\" onClick={deletepost}>\r\n            <Icon name=\"trash\" />\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nconst DELETE_POST = gql`\r\n    mutation deletePost($postId: ID!){\r\n        deletePost(postId: $postId)\r\n    }\r\n`\r\nexport default DeleteButton","C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\util\\graphql.js",[],"C:\\Users\\iam-v0id\\OneDrive\\Documents\\CODE\\BZ\\Cyber\\src\\components\\DeleteRoom.js",["153"],"import React from 'react'\r\nimport {gql} from 'graphql-tag'\r\nimport {Button,Icon} from 'semantic-ui-react'\r\nimport {useMutation} from 'react-apollo'\r\n\r\nfunction DeleteRoom(roomId){\r\n    var roomId = roomId.roomId\r\n    const [DeleteRoom] = useMutation(DELETE_ROOM,{\r\n        update(){\r\n\r\n        },\r\n        variables:{\r\n            roomId\r\n        }\r\n    })\r\n    const dbt={display:\"flex\",justifyContent:\"center\"}\r\n    return(\r\n        <Button style={dbt} as=\"div\" color=\"red\" onClick={DeleteRoom}>\r\n            <Icon name=\"trash\" />\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\nconst DELETE_ROOM = gql`\r\n    mutation DeleteRoom($roomId: ID!){\r\n        deleteRoom(roomId: $roomId)\r\n    }\r\n`\r\nexport default DeleteRoom",{"ruleId":"154","severity":1,"message":"155","line":23,"column":22,"nodeType":"156","messageId":"157","endLine":23,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":42,"column":13,"nodeType":"160","endLine":42,"endColumn":84},{"ruleId":"154","severity":1,"message":"161","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":27},{"ruleId":"154","severity":1,"message":"162","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":20,"column":24,"nodeType":"156","messageId":"157","endLine":20,"endColumn":31},{"ruleId":"154","severity":1,"message":"163","line":34,"column":12,"nodeType":"156","messageId":"157","endLine":34,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":39,"column":13,"nodeType":"160","endLine":39,"endColumn":81},{"ruleId":"154","severity":1,"message":"164","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":17},{"ruleId":"154","severity":1,"message":"165","line":5,"column":30,"nodeType":"156","messageId":"157","endLine":5,"endColumn":35},{"ruleId":"154","severity":1,"message":"166","line":6,"column":10,"nodeType":"156","messageId":"157","endLine":6,"endColumn":15},{"ruleId":"154","severity":1,"message":"167","line":6,"column":17,"nodeType":"156","messageId":"157","endLine":6,"endColumn":26},{"ruleId":"154","severity":1,"message":"168","line":6,"column":28,"nodeType":"156","messageId":"157","endLine":6,"endColumn":31},{"ruleId":"154","severity":1,"message":"169","line":10,"column":10,"nodeType":"156","messageId":"157","endLine":10,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":36,"column":7,"nodeType":"172","messageId":"173","endLine":36,"endColumn":67,"fix":"174"},{"ruleId":"170","severity":1,"message":"175","line":36,"column":7,"nodeType":"172","messageId":"173","endLine":36,"endColumn":50,"fix":"176"},{"ruleId":"170","severity":1,"message":"177","line":36,"column":7,"nodeType":"172","messageId":"173","endLine":36,"endColumn":31,"fix":"178"},{"ruleId":"179","severity":1,"message":"180","line":37,"column":34,"nodeType":"181","messageId":"182","endLine":37,"endColumn":36},{"ruleId":"183","severity":1,"message":"184","line":47,"column":11,"nodeType":"156","messageId":"185","endLine":47,"endColumn":12},{"ruleId":"183","severity":1,"message":"186","line":49,"column":11,"nodeType":"156","messageId":"185","endLine":49,"endColumn":17},{"ruleId":"179","severity":1,"message":"187","line":50,"column":48,"nodeType":"181","messageId":"182","endLine":50,"endColumn":50},{"ruleId":"170","severity":1,"message":"171","line":56,"column":7,"nodeType":"172","messageId":"173","endLine":56,"endColumn":67,"fix":"188"},{"ruleId":"170","severity":1,"message":"175","line":56,"column":7,"nodeType":"172","messageId":"173","endLine":56,"endColumn":50,"fix":"189"},{"ruleId":"170","severity":1,"message":"177","line":56,"column":7,"nodeType":"172","messageId":"173","endLine":56,"endColumn":31,"fix":"190"},{"ruleId":"179","severity":1,"message":"187","line":76,"column":33,"nodeType":"181","messageId":"182","endLine":76,"endColumn":35},{"ruleId":"179","severity":1,"message":"187","line":79,"column":49,"nodeType":"181","messageId":"182","endLine":79,"endColumn":51},{"ruleId":"179","severity":1,"message":"187","line":101,"column":98,"nodeType":"181","messageId":"182","endLine":101,"endColumn":100},{"ruleId":"179","severity":1,"message":"187","line":101,"column":147,"nodeType":"181","messageId":"182","endLine":101,"endColumn":149},{"ruleId":"179","severity":1,"message":"187","line":101,"column":194,"nodeType":"181","messageId":"182","endLine":101,"endColumn":196},{"ruleId":"179","severity":1,"message":"187","line":101,"column":252,"nodeType":"181","messageId":"182","endLine":101,"endColumn":254},{"ruleId":"154","severity":1,"message":"161","line":1,"column":15,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"191","line":7,"column":14,"nodeType":"156","messageId":"157","endLine":7,"endColumn":20},{"ruleId":"154","severity":1,"message":"192","line":7,"column":21,"nodeType":"156","messageId":"157","endLine":7,"endColumn":30},{"ruleId":"154","severity":1,"message":"193","line":18,"column":24,"nodeType":"156","messageId":"157","endLine":18,"endColumn":29},{"ruleId":"154","severity":1,"message":"161","line":1,"column":15,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"193","line":18,"column":24,"nodeType":"156","messageId":"157","endLine":18,"endColumn":29},{"ruleId":"154","severity":1,"message":"194","line":14,"column":19,"nodeType":"156","messageId":"157","endLine":14,"endColumn":28},{"ruleId":"195","severity":1,"message":"196","line":18,"column":30,"nodeType":"197","messageId":"198","endLine":18,"endColumn":32},{"ruleId":"179","severity":1,"message":"187","line":20,"column":27,"nodeType":"181","messageId":"182","endLine":20,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":25,"column":13,"nodeType":"181","messageId":"182","endLine":25,"endColumn":15},{"ruleId":"154","severity":1,"message":"193","line":31,"column":26,"nodeType":"156","messageId":"157","endLine":31,"endColumn":31},{"ruleId":"179","severity":1,"message":"187","line":48,"column":86,"nodeType":"181","messageId":"182","endLine":48,"endColumn":88},{"ruleId":"179","severity":1,"message":"180","line":48,"column":146,"nodeType":"181","messageId":"182","endLine":48,"endColumn":148},{"ruleId":"154","severity":1,"message":"161","line":1,"column":15,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"193","line":16,"column":23,"nodeType":"156","messageId":"157","endLine":16,"endColumn":28},{"ruleId":"183","severity":1,"message":"199","line":7,"column":9,"nodeType":"156","messageId":"185","endLine":7,"endColumn":15},{"ruleId":"183","severity":1,"message":"200","line":7,"column":9,"nodeType":"156","messageId":"185","endLine":7,"endColumn":15},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'loginpage' is assigned a value but never used.","'graphql' is defined but never used.","'Label' is defined but never used.","'Paper' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'Room' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property backgroundColor.","MemberExpression","unexpectedWhitespace",{"range":"201","text":"202"},"Unexpected whitespace before property style.",{"range":"203","text":"202"},"Unexpected whitespace before property getElementById.",{"range":"204","text":"202"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'a' is already defined.","redeclared","'points' is already defined.","Expected '===' and instead saw '=='.",{"range":"205","text":"202"},{"range":"206","text":"202"},{"range":"207","text":"202"},"'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'error' is assigned a value but never used.","'setValues' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'postId' is already defined.","'roomId' is already defined.",[1162,1164],".",[1155,1157],[1127,1129],[1882,1884],[1875,1877],[1847,1849]]